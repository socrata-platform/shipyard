#!/bin/bash

set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
NS=socrata
BUILD_DIRS=$@
# If an image name is provided, validate it can be built
if [ -n "$BUILD_DIRS" ]; then
  BUILD_DOCKERFILES=$(find ${BUILD_DIRS} -name Dockerfile)
  rc=$?; if [[ $rc != 0 ]]; then
    echo "No Dockerfiles found"
    exit $rc
  fi
  # Find all of the available builds for this image name
  BUILD_DIRS=$(echo "$BUILD_DOCKERFILES" | sed "s:^\(.*\)/Dockerfile:\1:")
fi

BUILD_DIRS=${BUILD_DIRS:-`cd $DIR && find . -name Dockerfile | sed "s:^./\(.*\)/Dockerfile:\1:"`}

function build_image() {
  local subdir=$1
  local tag=$(echo $subdir | sed "s:/.*$::")
  local versions=$(echo $subdir | sed -e "s:^${tag}::" -e "s:/: \
  :g")

  if [ -n "$versions" ]; then
    for version in $versions; do
      docker buildx build $BUILD_OPTS -t ${NS}/$tag:$version $DIR/$subdir
    done
  else
    docker buildx build $BUILD_OPTS -t ${NS}/$tag $DIR/$subdir
  fi
}

for subdir in $BUILD_DIRS; do
  echo "Building ${subdir}..."
  build_image $subdir
done
