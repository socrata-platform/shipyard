#!/usr/bin/ruby

require 'rubygems'
require 'aws-sdk-core'
require 'aws-sdk-resources'
require 'yaml'
require 'base64'

if ENV['AWS_REGION'].nil?
  Aws.config[:region] = 'us-west-2'
  puts "DEBUG: AWS_REGION unset. Defaulting to us-west-2"
end

if File.file?('/etc/aws/credentials')
  creds = YAML.load_file('/etc/aws/credentials')
  Aws.config[:credentials] = Aws::Credentials.new(
    creds['aws_access_key_id'],
    creds['aws_secret_access_key']
  )
end

files = ENV['CLORTHO_PATH']
bucket = ENV['CLORTHO_BUCKET']

if(files.nil? or bucket.nil?)
  puts "INFO: Either CLORTHO_BUCKET or CLORTHO_PATH unset. Skipping creds download"
  exit 0
end

def decrypt_data_key(blob)
  kms = Aws::KMS::Client.new
  res = kms.decrypt(ciphertext_blob: blob)
  puts "DEBUG: Decrypted #{res[:plaintext].size} bytes of key data"
  return res[:plaintext]
end

def get_key(bucket, file)
  begin
    s3c = Aws::S3::Client.new
    res = s3c.get_object(bucket: bucket,
                         key: file)
    puts "DEBUG Got #{res[:body].size} bytes of encrypted key data"
    key_blob_strio = res[:body]
    key_blob = key_blob_strio.read
    decrypt_data_key(key_blob)
  rescue Aws::S3::Errors::ServiceError => e
    puts "ERROR S3 error while downloading #{file}: #{e}"
    exit 1
  rescue Seahorse::Client::NetworkingError => e
    puts "ERROR Network issue while retrieving #{file}: #{e}"
    exit 1
  end
end

def get_file(bucket, file, key)
  begin
    s3c = Aws::S3::Encryption::Client.new(encryption_key: key)
    res = s3c.get_object(bucket: bucket,
                         key: file)
    f = File.new("/dev/shm/" + File.basename(file), 'w')
    f.puts res[:body].read
  rescue Aws::S3::Errors::ServiceError => e
    puts "ERROR S3 error while retrieving #{file}: #{e}"
    exit 1
  rescue Seahorse::Client::NetworkingError => e
    puts "ERROR Network issue while retrieving #{file}: #{e}"
    exit 1
  end
end

files.split(':').each do |file|
  data_key = get_key(bucket, file + ".key")
  get_file(bucket, file, data_key)
end

# Local variables:
# mode: ruby
# tab-width: 4
# indent-tabs-mode: nil
# end:
